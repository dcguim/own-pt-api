{
  "_id": "_design/txt",
  "_rev": "11-28ddcb4a58ac6484b63b5c6618c93702",
  "views": {},
  "language": "javascript",
  "indexes": {
    "txt": {
      "analyzer": "standard",
      "index": "function(d){\n    \n    var text = '';\n\n    if (d.word_pt) { text += d.word_pt.join(' ') + ' '; }\n    if (d.word_en) { text += d.word_en.join(' ') + ' '; }\n    if (d.id) { text += d.id + ' '; }\n    if (d.gloss_en) { text += d.gloss_en + ' '; }\n    if (d.gloss_pt) \n    { \n        if (Array.isArray(d.gloss_pt))\n        {\n            d.gloss_pt.forEach(function(elt,idx){text += elt + ' ';});\n        }\n        else\n        {\n        text += d.gloss_pt + ' '; \n        }\n        \n    }\n\n    if (d.example_pt) \n    { \n        if (Array.isArray(d.example_pt))\n        {\n            d.example_pt.forEach(function(elt,idx){text += elt + ' ';});\n        }\n        else\n        {\n        text += d.example_pt + ' '; \n        }\n        \n    }\n\n    if (d.nomlex_noun) { text += d.nomlex_noun + ' '; }\n    if (d.nomlex_verb) { text += d.nomlex_verb + ' '; }\n    if (d.nomlex_plural) { text += d.nomlex_plural; }\n\n    index(\"default\", text);\n    index(\"id\", d.id);\n    \n    if (d.nomlex_plural) {index(\"nomlex_plural\", d.nomlex_plural);}\n    if (d.nomlex_verb) { index(\"nomlex_verb\", d.nomlex_verb); }\n    if (d.nomlex_noun) { index(\"nomlex_noun\", d.nomlex_noun); }\n\n    if (d.word_pt)\n    {\n        if (Array.isArray(d.word_pt))\n        {\n            d.word_pt.forEach(function(elt, idx) \n            {\n                index(\"word_pt\", elt);\n            });\n        }\n        else\n        {\n            index(\"word_pt\", d.word_pt);\n        }\n    }\n\n    if (d.hasOwnProperty('word_count_en'))\n    {\n        index(\"word_count_en\", d.word_count_en.toString(), { \"facet\": true });\n    }\n\n    if (d.hasOwnProperty('word_count_pt'))\n    {\n        index(\"word_count_pt\", d.word_count_pt.toString(), { \"facet\": true });\n    }\n    \n    if (d.rdf_type)\n    {\n        if (Array.isArray(d.rdf_type))\n        {\n            d.rdf_type.forEach(function(elt, idx) \n            {\n                index(\"rdf_type\", elt, {\"facet\": true});\n            });\n        }\n        else\n        {\n            index(\"rdf_type\", d.rdf_type, { \"facet\": true });\n        }\n    }\n    \n    if (d.wn30_lexicographerFile) \n    {\n        if (Array.isArray(d.wn30_lexicographerFile))\n        {\n            d.wn30_lexicographerFile.forEach(function(elt, idx)\n            {\n                index(\"wn30_lexicographerFile\", elt, { \"facet\": true });\n            });\n        }\n        else\n        {\n            index(\"wn30_lexicographerFile\", d.wn30_lexicographerFile, { \"facet\": true });\n        }\n    }\n}"
    },
    "id": {
      "analyzer": "keyword",
      "index": "function(doc){\n index(\"default\", doc.id);\n}"
    }
  }
}
